---
- set_fact:
    appname: node-exporter

- name: provision infra
  ansible.builtin.include_role:
    name: docker_lab
    tasks_from: infra-provision

- name: "Manage {{appname}} container state - {{appstate}} - {{appconfig[appname].ip}}"
  docker_container:
    name: "{{appname}}"
    image: "{{appconfig[appname].image}}"
    state: "{{ appconfig[appname].appstate }}"
    recreate: "{{ appconfig[appname].recreate }}"
    restart_policy: unless-stopped
    container_default_behavior: no_defaults
    detach: true
    user: "{{ appconfig[appname].exec_as_user }}:{{ appconfig[appname].exec_as_group }}"
    ports: "{{ appconfig[appname].ports | default(omit,true)}}"
    command: --path.rootfs=/host --no-collector.ipvs --no-collector.btrfs --no-collector.infiniband --no-collector.xfs --no-collector.zfs	--collector.netdev.device-exclude="^(veth.*|cali.*|[a-f0-9]{15})$" --collector.filesystem.ignored-mount-points="^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|tmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
    env:
    labels: |
      {
        "traefik.enable": "false"
      }
    volumes:
      - "/:/host:ro,rslave"
    networks_cli_compatible: yes
    network_mode: host
    pid_mode: host

- name: Check if server is up
  when:  appconfig[appname].appstate == 'started'
  uri:
    url: "http://{{inventory_hostname}}:9100/metrics"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 2

- name: delete infra
  ansible.builtin.include_role:
    name: docker_lab
    tasks_from: infra-delete