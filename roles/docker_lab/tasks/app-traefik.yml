---
- set_fact:
    appname: traefik

- name: provision infra
  ansible.builtin.include_role:
    name: docker_lab
    tasks_from: infra-provision

- name: Template {{appname}} config
  when:  appconfig[appname].appstate == 'started'
  become: true
  ansible.builtin.template:
    src: templates/{{appname}}/config/traefik.ansible.template.yml
    dest: /home/{{ ansible_user }}/apps/{{appname}}/config/traefik.yml
    owner: "{{ appconfig[appname].exec_as_user }}"
    group: "{{ appconfig[appname].exec_as_group }}"
    mode: '0644'

- name: Template {{appname}} tls
  when:  appconfig[appname].appstate == 'started'
  become: true
  ansible.builtin.template:
    src: templates/{{appname}}/config/tls.ansible.template.j2
    dest: /home/{{ ansible_user }}/apps/{{appname}}/config/tls.yml
    owner: "{{ appconfig[appname].exec_as_user }}"
    group: "{{ appconfig[appname].exec_as_group }}"
    mode: '0644'

- name: Manage {{appname}} container state
  docker_container:
    name: "{{appname}}"
    hostname: "{{appname}}"
    image: "{{appconfig[appname].image}}"
    state: "{{ appconfig[appname].appstate }}"
    recreate: "{{ appconfig[appname].recreate }}"
    restart_policy: unless-stopped
    container_default_behavior: no_defaults
    detach: true
    user: "{{ appconfig[appname].exec_as_user }}:{{ appconfig[appname].exec_as_group }}"
    ports: "{{ appconfig[appname].ports | default(omit,true)}}"
    command: 
    env:
    labels: |
      {
        "traefik.http.services.{{appname}}.loadbalancer.server.port": "8080",
        "traefik.http.routers.{{appname}}.service": "{{appname}}",
        "traefik.http.routers.{{appname}}.entrypoints": "https",
        "traefik.http.routers.{{appname}}.tls": "true",
        "traefik.http.routers.{{appname}}.rule": "Host(`{{appname}}.{{inventory_hostname}}`)",
        "traefik.http.routers.{{appname}}.middlewares": "{{appname}}_basicauth",
        "traefik.http.middlewares.{{appname}}_basicauth.basicauth.users": "admin:$2a$12$FsjaX8Rga9djEkPZfUE1MOl6B.8.spiM1Mi95/62MzYiLeBrWgFDu",
      }
    volumes:
      - "/home/{{ansible_user}}/apps/{{appname}}/config/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "/home/{{ansible_user}}/apps/{{appname}}/config/tls.yml:/config/tls.yml:ro"
      - "/home/{{ansible_user}}/apps/tls:/certs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks_cli_compatible: yes
    network_mode: primenet
    networks:
      - name: primenet
        ipv4_address: "{{appconfig[appname].ip}}"

- name: Check if {{appname}} server is up
  when:  appconfig[appname].appstate == 'started'
  uri:
    url: "http://{{appconfig[appname].ip}}:8080/metrics"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 2

- name: delete infra
  ansible.builtin.include_role:
    name: docker_lab
    tasks_from: infra-delete