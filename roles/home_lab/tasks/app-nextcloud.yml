---
- set_fact:
    appname: nextcloud

- name: provision infra
  ansible.builtin.include_role:
    name: docker_lab
    tasks_from: infra-provision

- name: "Manage nextcloud container state"
  docker_container:
    name: "{{appname}}"
    hostname: "{{appname}}"
    image: "{{appconfig[appname].image}}"
    state: "{{ appconfig[appname].appstate }}"
    recreate: "{{ appconfig[appname].recreate }}"
    restart_policy: unless-stopped
    container_default_behavior: no_defaults
    detach: true
    # running as root initially
    # user: "{{ appconfig[appname].exec_as_user }}:{{ appconfig[appname].exec_as_group }}"
    ports: "{{ appconfig[appname].ports | default(omit,true)}}"
    command: 
    env:
      PUID: "{{ appconfig[appname].exec_as_user }}"
      PGID: "{{ appconfig[appname].exec_as_group }}"
      TZ: "Europe/Paris"
    labels: |
      {
        "traefik.enable": "true",
        "traefik.http.services.{{appname}}.loadbalancer.server.port": "443",
        "traefik.http.services.{{appname}}.loadbalancer.server.scheme": "https",
        "traefik.http.routers.{{appname}}.service": "{{appname}}",
        "traefik.http.routers.{{appname}}.entrypoints": "https",
        "traefik.http.routers.{{appname}}.tls": "true",
        "traefik.http.routers.{{appname}}.rule": "Host(`{{appname}}.{{inventory_hostname}}`)",
      }
    volumes:
      - "{{ appconfig[appname].data_folder }}:/data:rw"
      - "{{ appconfig[appname].config_folder }}:/config:rw"
    networks_cli_compatible: yes
    network_mode: primenet
    networks:
      - name: primenet
        ipv4_address: "{{appconfig[appname].ip}}"

- name: Check if server is up
  when:  appconfig[appname].appstate == 'started'
  uri:
    url: "https://{{appname}}.{{inventory_hostname}}"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 2
  delegate_to: 127.0.0.1

- name: delete infra
  ansible.builtin.include_role:
    name: docker_lab
    tasks_from: infra-delete