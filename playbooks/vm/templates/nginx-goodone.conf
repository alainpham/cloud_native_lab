worker_processes  5;  ## Default: 1
error_log  /dev/stderr;
pid        /tmp/nginx.pid;
worker_rlimit_nofile 8192;

events {
    worker_connections  4096;  ## Default: 1024
}

stream {
    # ssd deployment
    upstream memberlist {
        least_conn;
        server write01:7946;
        server write02:7946;
        server write03:7946;
        server backend01:7946;
        server backend02:7946;
        server backend03:7946;
        server read01:7946;
        server read02:7946;
    }

    server {
        listen     7946;
        proxy_pass memberlist;
    }

    upstream backendhttp {
        least_conn;
        server backend01:3100;
        server backend02:3100;
        server backend03:3100;
    }

    server {
        listen     3100;
        proxy_pass backendhttp;
    }

}


http {
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    client_max_body_size 4M;

    proxy_read_timeout    600; ## 6 minutes
    proxy_send_timeout    600;
    proxy_connect_timeout 600;

    proxy_http_version    1.1;

    default_type application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log   /dev/stderr  main;

    sendfile     on;
    tcp_nopush   on;
    
    
    upstream write {
        server write01:3100;
        server write02:3100;
        server write03:3100;
    }

    upstream backend {
        server backend01:3100;
        server backend02:3100;
        server backend03:3100;
    }


    upstream read {
        server read01:3100;
        server read02:3100;
    }

    server {

        listen             8080;

        location = / {
            return 200 'OK';
            auth_basic off;
        }

        # to be able to show a config file in GE
        location = /config {
            proxy_pass       http://write$request_uri;
        }

        location = /ring {
            proxy_pass       http://write$request_uri;
        }

        # querier and query frontend
        location /loki/api/v1/ {
            proxy_pass       http://read$request_uri;
        }

        location = /loki/api/v1/tail {
            proxy_pass       http://read$request_uri;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # the distributor
        location = /loki/api/v1/push {
            proxy_pass       http://write$request_uri;
        }

        location /distributor/ {
            proxy_pass       http://write$request_uri;
        }

        # ingester
        location /flush/ {
            proxy_pass       http://write$request_uri;
        }

        location /ingester/ {
            proxy_pass       http://write$request_uri;
        }

        # ruler

        location /ruler/ {
            proxy_pass       http://backend$request_uri;
        }

        location /loki/api/v1/rules/ {
            proxy_pass       http://backend$request_uri;
        }

        location /api/prom/rules/ {
            proxy_pass       http://backend$request_uri;
        }

        location /prometheus/api/v1/rules {
            proxy_pass       http://backend$request_uri;
        }

        location /prometheus/api/v1/alerts {
            proxy_pass       http://backend$request_uri;
        }

        # compactor
        location /compactor {
            proxy_pass       http://backend$request_uri;
        }

        location /loki/api/v1/delete {
            proxy_pass       http://backend$request_uri;
        }
        

        # other
        location /store-gateway/ {
        proxy_pass       http://backend$request_uri;
        }

        location /query-scheduler/ {
            proxy_pass       http://backend$request_uri;
        }

        location /scheduler/ {
            proxy_pass       http://backend$request_uri;
        }


        # admin api
        location /admin/api/ {
            proxy_pass       http://write$request_uri;
        }


    }
}